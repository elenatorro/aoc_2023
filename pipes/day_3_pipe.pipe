NODE get_number_positions
SQL >

    SELECT
        line_no,
        line_number,
        init_position,
        positions,
        arrayJoin(
            range(init_position, toUInt64(init_position + length(line_number)))
        ) as pos
    FROM
        (
            SELECT line_no, line_numbers as line_number, init_position, positions
            FROM
                (
                    SELECT
                        line_no,
                        extractAll(line, '(\d+)') as line_numbers,
                        arrayMap(
                            i -> position(
                                line,
                                line_numbers[i]
                            ),
                            range(1, length(line_numbers) + 1)
                        ) as positions,
                        arrayMap(
                            i -> position(
                                line,
                                line_numbers[i],
                                if(i > 0 and i < positions[i-1] + length(line_numbers[i-1]), toUInt64(positions[i-1] + length(line_numbers[i-1]) + 1), i)
                            ),
                            range(1, length(line_numbers) + 1)
                        ) as init_position
                    FROM day_3
                    ORDER BY line_no
                )
                ARRAY JOIN line_numbers, init_position
        )
    



NODE get_values_that_have_symbols
SQL >

    WITH (SELECT groupArray(splitByString('', line)) as lines FROM (SELECT * FROM day_3 ORDER BY line_no)) as map_lines
    SELECT
      length(map_lines[line_no]) as line_length,
      length(map_lines) as lines_length,
      line_no,
      toInt64(line_number) as line_number,
      init_position,
      positions,
      pos,
      multiIf(
        --> -1, -1
        line_no > 1 and pos > 1 and match(map_lines[line_no - 1][pos - 1], '[^\d.]'), 1,
        --> -1, 0
        line_no > 1 and match(map_lines[line_no - 1][pos], '[^\d.]'), 1,
        --> -1, +1
        line_no > 1 and pos < line_length and match(map_lines[line_no - 1][pos + 1], '[^\d.]'), 1,
        --> 0, -1
        pos > 1 and match(map_lines[line_no][pos - 1], '[^\d.]'), 1,
        --> 0, +1
        pos < line_length and match(map_lines[line_no][pos + 1], '[^\d.]'), 1,
        --> +1, -1
        line_no < lines_length and pos > 1 and match(map_lines[line_no + 1][pos - 1], '[^\d.]'), 1,
        --> +1, 0
        line_no < lines_length and match(map_lines[line_no + 1][pos], '[^\d.]'), 1,
        --> +1, +1
        line_no < lines_length and pos < line_length and match(map_lines[line_no + 1][pos + 1], '[^\d.]'), 1,
        0
      ) as has_symbol
    FROM get_number_positions



NODE remove_duplicates
SQL >

    SELECT DISTINCT line_no, line_number, init_position, positions
    FROM get_values_that_have_symbols
    WHERE has_symbol > 0
    ORDER BY line_no, init_position



NODE per_line
SQL >

    SELECT line_no, sum(line_number) as total FROM remove_duplicates group by line_no



NODE day_3_star_1
SQL >

    SELECT sum(line_number) as total FROM remove_duplicates



NODE get_star_line_numbers
SQL >

    WITH (SELECT groupArray(splitByString('', line)) as lines FROM (SELECT * FROM day_3 ORDER BY line_no)) as map_lines
    SELECT
      length(map_lines[line_no]) as line_length,
      length(map_lines) as lines_length,
      line_no,
      toInt64(line_number) as line_number,
      init_position,
      positions,
      pos,
      multiIf(
        --> -1, -1
        line_no > 1 and pos > 1 and match(map_lines[line_no - 1][pos - 1], '(\*)'), cityHash64(trim(toString((line_no - 1, pos - 1)))),
        --> -1, 0
        line_no > 1 and match(map_lines[line_no - 1][pos], '(\*)'), cityHash64(trim(toString((line_no - 1, pos)))),
        --> -1, +1
        line_no > 1 and pos < line_length and match(map_lines[line_no - 1][pos + 1], '(\*)'), cityHash64(trim(toString((line_no - 1, pos + 1)))),
        --> 0, -1
        pos > 1 and match(map_lines[line_no][pos - 1], '(\*)'), cityHash64(trim(toString((line_no, pos - 1)))),
        --> 0, +1
        pos < line_length and match(map_lines[line_no][pos + 1], '(\*)'), cityHash64(trim(toString((line_no, pos + 1)))),
        --> +1, -1
        line_no < lines_length and pos > 1 and match(map_lines[line_no + 1][pos - 1], '(\*)'), cityHash64(trim(toString((line_no + 1, pos - 1)))),
        --> +1, 0
        line_no < lines_length and match(map_lines[line_no + 1][pos], '(\*)'), cityHash64(trim(toString((line_no + 1, pos)))),
        --> +1, +1
        line_no < lines_length and pos < line_length and match(map_lines[line_no + 1][pos + 1], '(\*)'), cityHash64(trim(toString((line_no + 1, pos + 1)))),
        0
      ) as symbol_position
    FROM get_number_positions




NODE filter_line_numbers
SQL >

    SELECT distinct line_number as group_numbers, symbol_position, positions, line_no FROM get_star_line_numbers
    WHERE symbol_position > 0
    ORDER BY symbol_position



NODE group_line_numbers
SQL >

    SELECT groupArray(group_numbers) as group_numbers, symbol_position
    FROM filter_line_numbers
    GROUP BY symbol_position
    HAVING LENGTH(group_numbers) > 1



NODE day_3_star_2
SQL >

    SELECT sum(group_numbers[1] * group_numbers[2]) as total FROM group_line_numbers

